<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thoughtWorks.dao.PersonDao">
    <select id="queryPersonTotalCount" resultType="long">
        SELECT count(1)
        FROM t_teacher
    </select>
    <delete id="deleteTeacherById" parameterType="string">
        DELETE FROM t_teacher
        WHERE no = #{id}
    </delete>
    <insert id="addTeacher" parameterType="Teacher">
        INSERT INTO t_teacher (no, name, department_id, direction_id, gender)
        VALUES (#{no}, #{name}, #{departmentId}, #{directionId}, #{gender})
    </insert>
    <update id="updateTeacher" parameterType="Teacher">
        UPDATE t_teacher
        SET name = #{name}, department_id = #{departmentId}, direction_id = #{directionId}, gender = #{gender}
        WHERE no = #{no}
    </update>
    <select id="queryStudentsByLikes" parameterType="map" resultType="map">
        SELECT student.no,student.name,student.gender,direction.name direction,profession.name profession,class.name
        classes,teacher.department_id departmentId
        FROM t_student student
        LEFT JOIN (SELECT no, department_id FROM t_teacher) teacher ON teacher.no = 123
        LEFT JOIN (SELECT id FROM t_department) department ON department.id = teacher.department_id
        LEFT JOIN (SELECT id, name FROM t_direction) direction ON direction.id = student.direction_id
        <if test="directionId!=0">
            AND direction.id = #{directionId}
        </if>
        LEFT JOIN (SELECT id,name FROM t_profession) profession ON profession.id = student.profession_id
        <if test="professionId!=0">
            AND profession.id=#{professionId}
        </if>
        LEFT JOIN (SELECT id, name FROM t_classes) class ON class.id = student.classes_id
        WHERE student.department_id = teacher.department_id
        and direction_id =direction.id
        AND profession.id = profession_id
        and student.name
        LIKE #{name}
    </select>
    <select id="queryStudentsByClassesIdsAndLikeName" resultType="map">
        SELECT
        student.no,
        student.name,
        student.gender,
        direction.name direction,
        profession.name profession,
        class.name
        classes,
        teacher.department_id departmentId
        FROM t_student student
        LEFT JOIN (SELECT
        no,
        department_id
        FROM t_teacher) teacher ON teacher.no = #{no}
        LEFT JOIN (SELECT id
        FROM t_department) department ON department.id = teacher.department_id
        LEFT JOIN (SELECT
        id,
        name
        FROM t_direction) direction ON direction.id = student.direction_id

        LEFT JOIN (SELECT
        id,
        name
        FROM t_profession) profession ON profession.id = student.profession_id

        LEFT JOIN (SELECT
        id,
        name
        FROM t_classes) class ON class.id = student.classes_id
        WHERE student.department_id = teacher.department_id
        AND direction_id = direction.id
        AND profession.id = profession_id
        AND
        student.classes_id IN
        <foreach collection="classes" open="(" close=")" separator="," item="item">
            #{item.id}
        </foreach>
        and student.name LIKE #{name}
    </select>
    <select id="queryStudentByNo" parameterType="string" resultType="Student">
        SELECT *
        FROM t_student
        WHERE no = #{stuNo}
    </select>
    <select id="queryPersonList" resultType="Map">
        SELECT
            teacher.no,
            teacher.name,
            teacher.gender,
            department.id   departmentId,
            department.name departmentName,
            direction.id    directionId,
            direction.name  directionName
        FROM t_teacher teacher
            LEFT JOIN (SELECT
                           id,
                           name
                       FROM t_department) department ON department.id = teacher.department_id
            LEFT JOIN (SELECT
                           id,
                           name
                       FROM t_direction) direction ON direction.id = teacher.direction_id
        LIMIT #{start}, #{end}
    </select>

    <select id="queryTeacherByNo" parameterType="string" resultType="map">
        SELECT *
        FROM t_teacher
        WHERE no = #{no}
    </select>
    <update id="distributedClass">
        UPDATE t_student SET classes_id = #{classesId} WHERE t_student.no IN
        <foreach collection="ids" open="(" close=")" separator="," item="item">
            #{item}
        </foreach>
    </update>
    <update id="distributeDirection">
        UPDATE t_student SET direction_id=#{directionId} WHERE no IN
        <foreach collection="ids" open="(" separator="," close=")" item="item">
            #{item}
        </foreach>
    </update>
    <insert id="addCommunication" parameterType="CommunicationContent">
        INSERT INTO t_communication (teacher_id, student_id, talk_name, direction, content) VALUES
            (#{teacherId}, #{studentId}, #{talkName}, #{direction}, #{content})
    </insert>
    <select id="queryCommunicationByStudentId" parameterType="string" resultType="map">

        SELECT
            id,
            teacher.name teacherName,
            talk_name    talkName,
            content,
            time,
            direction
        FROM t_communication communication
            LEFT JOIN (SELECT
                           no,
                           name
                       FROM t_teacher) teacher ON teacher.no = communication.teacher_id
        WHERE communication.student_id = #{studentNo}
        ORDER BY time DESC
    </select>


    <update id="updateCommunicationContent" parameterType="CommunicationContent">
        UPDATE t_communication
        SET content = #{content}
        WHERE id = #{id}
    </update>
    
    <select id="queryStudentInfos" resultType="map">
        select * from tttttt;
    </select>

    <select id="queryStudentTotalCount" resultType="long">
        select count(1) from tttttt;
    </select>

    <select id="queryStudentList" resultType="map">
        SELECT *
        FROM tttttt
        LIMIT #{start}, #{pageSize}
    </select>
</mapper>